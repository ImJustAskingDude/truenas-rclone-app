apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rclone-app.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "rclone-app.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "rclone-app.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "rclone-app.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
      containers:
        - name: rclone
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          securityContext:
            privileged: {{ .Values.securityContext.privileged }}
            capabilities:
              add: {{ toYaml .Values.securityContext.capabilities.add | indent 14 }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              rclone mount \
                --config /config/rclone.conf \
                {{ .Values.remoteName }} \
                {{ .Values.mountContainerPath }} \
                {{- range .Values.rcloneOptions }} \
                {{ . }} \
                {{- end }}
              && tail -f /dev/null
          volumeMounts:
            - name: config
              mountPath: /config
            - name: mount
              mountPath: {{ .Values.mountContainerPath }}
      volumes:
        - name: config
          hostPath:
            path: {{ .Values.configHostPath }}
            type: DirectoryOrCreate
        - name: mount
          hostPath:
            path: {{ .Values.mountHostPath }}
            type: DirectoryOrCreate